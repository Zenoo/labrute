update_deployments:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl jq
  script:
    - |
      # Update staging.json
      CURRENT_CONTENT=$(curl --silent --header "PRIVATE-TOKEN: ${CONFIG_REPO_TOKEN}" \
        "https://gitlab.com/api/v4/projects/eternaltwin%2Fconfig/repository/files/pousty%2Fapps%2Fbrute%2Fchannels%2Fstaging.json?ref=main" \
        | jq -r '.content' | base64 -d)
    - |
      NEW_CONTENT=$(echo "$CURRENT_CONTENT" | jq --arg hash "$CI_COMMIT_SHA" \
        '.release = $hash')
    - echo "Updating staging.json with commit $CI_COMMIT_SHA"
    - echo "$NEW_CONTENT" | jq '.'
    - |
      # Update production.json
      CURRENT_CONTENT_PROD=$(curl --silent --header "PRIVATE-TOKEN: ${CONFIG_REPO_TOKEN}" \
        "https://gitlab.com/api/v4/projects/eternaltwin%2Fconfig/repository/files/pousty%2Fapps%2Fbrute%2Fchannels%2Fproduction.json?ref=main" \
        | jq -r '.content' | base64 -d)
    - |
      NEW_CONTENT_PROD=$(echo "$CURRENT_CONTENT_PROD" | jq --arg hash "$CI_COMMIT_SHA" \
        '.release = $hash')
    - echo "Updating production.json with commit $CI_COMMIT_SHA"
    - echo "$NEW_CONTENT_PROD" | jq '.'
    - |
      # Make a single commit with both file changes
      curl --request POST \
        --header "PRIVATE-TOKEN: ${CONFIG_REPO_TOKEN}" \
        --header "Content-Type: application/json" \
        --data "{
          \"branch\": \"main\",
          \"commit_message\": \"chore: LB Update staging and production to $CI_COMMIT_SHA\",
          \"actions\": [
            {
              \"action\": \"update\",
              \"file_path\": \"pousty/apps/brute/channels/staging.json\",
              \"content\": $(echo "$NEW_CONTENT" | jq -Rs .)
            },
            {
              \"action\": \"update\",
              \"file_path\": \"pousty/apps/brute/channels/production.json\",
              \"content\": $(echo "$NEW_CONTENT_PROD" | jq -Rs .)
            }
          ]
        }" \
        "https://gitlab.com/api/v4/projects/eternaltwin%2Fconfig/repository/commits"

  variables:
    GIT_STRATEGY: none
  rules:
    - if: "$CI_COMMIT_TAG =~ /^labrute-v/"
      when: on_success
